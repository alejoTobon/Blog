const { Sequelize, DataTypes } = require('sequelize');

// Configuración de la conexión a la base de datos
const sequelize = new Sequelize('nombre_base_datos', 'usuario', 'contraseña', {
  host: 'localhost',
  dialect: 'mysql'
});

// Definición del modelo Rol
const Rol = sequelize.define('Rol', {
  nombre: {
    type: DataTypes.STRING,
    allowNull: false
  }
}, {
  timestamps: false
});

// Definición del modelo Usuario
const Usuario = sequelize.define('Usuario', {
  nombre: {
    type: DataTypes.STRING,
    allowNull: false
  },
  email: {
    type: DataTypes.STRING,
    allowNull: false,
    unique: true
  },
  contrasena: {
    type: DataTypes.STRING,
    allowNull: false
  }
}, {
  timestamps: false
});

// Definición del modelo Publicacion
const Publicacion = sequelize.define('Publicacion', {
  titulo: {
    type: DataTypes.STRING,
    allowNull: false
  },
  contenido: {
    type: DataTypes.TEXT,
    allowNull: false
  },
  fechaPublicacion: {
    type: DataTypes.DATE,
    allowNull: false
  }
});

// Definición del modelo Comentario
const Comentario = sequelize.define('Comentario', {
  contenido: {
    type: DataTypes.TEXT,
    allowNull: false
  },
  fechaPublicacion: {
    type: DataTypes.DATE,
    allowNull: false
  }
});

// Establecer las relaciones entre los modelos
Rol.hasMany(Usuario, { foreignKey: 'RolId' });
Usuario.belongsTo(Rol, { foreignKey: 'RolId' });

Usuario.hasMany(Publicacion, { foreignKey: 'UsuarioId' });
Publicacion.belongsTo(Usuario, { foreignKey: 'UsuarioId' });

Publicacion.hasMany(Comentario, { foreignKey: 'PublicacionId' });
Comentario.belongsTo(Publicacion, { foreignKey: 'PublicacionId' });

Usuario.hasMany(Comentario, { foreignKey: 'UsuarioId' });
Comentario.belongsTo(Usuario, { foreignKey: 'UsuarioId' });

module.exports = {
  sequelize,
  Rol,
  Usuario,
  Publicacion,
  Comentario
};